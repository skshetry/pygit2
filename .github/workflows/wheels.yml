name: Wheels

on:
  push:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        env:
            CIBW_BEFORE_ALL: sh build.sh
            CIBW_ENVIRONMENT: LIBGIT2_VERSION=1.5.0 LIBSSH2_VERSION=1.10.0 LIBGIT2=/project/ci
            CIBW_ENVIRONMENT_MACOS: LIBGIT2_VERSION=1.5.0 LIBSSH2_VERSION=1.10.0 DYLD_LIBRARY_PATH=/usr/local/lib OPENSSL_VERSION=3.0.2
            CIBW_SKIP: "*-musllinux*"
            CIBW_REPAIR_WHEEL_COMMAND_LINUX: "DYLD_LIBRARY_PATH=/project/ci/lib64 auditwheel repair -w {dest_dir} {wheel}"
            CIBW_REPAIR_WHEEL_COMMAND_MACOS: "DYLD_LIBRARY_PATH=/usr/local/lib delocate-listdeps {wheel} && DYLD_LIBRARY_PATH=/usr/local/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}"
            CIBW_ARCHS_MACOS: x86_64 universal2
            CIBW_ARCHS_LINUX: x86_64 aarch64
            CIBW_ARCHS_WINDOWS: AMD64 x86
            CIBW_BEFORE_ALL_WINDOWS: bash build_windows.sh
            CMAKE_GENERATOR: "Visual Studio 16 2019"
            CIBW_ENVIRONMENT_WINDOWS: CMAKE_GENERATOR="Visual Studio 16 2019" LIBGIT2_VERSION=1.5.0 LIBGIT2=${{ github.workspace }}/project/ci

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [build_wheels]
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: wheels
        path: dist

    - name: Display structure of downloaded files
      run: ls -lh dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
